apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nestjs-with-postgres
  title: NestJS Service with backing PostgreSQL database
  description: Creates a NestJS Service together with a PostgreSQL database
  tags:
    - nodejs
    - nestjs
    - database
    - postgresql
    - book
spec:
  owner: rhdh-idp-book-authors
  type: service

  parameters:
    - title: Provide information about the GitHub location
      required:
        - githubOrg
      properties:
        githubOrg:
          title: Repo Owner
          type: string
          description: GitHub organization or user
          default: clecioantao
        description:
          title: Description
          type: string
          description: Help others understand what this component is for
          default: Creates a NestJS Service together with a PostgreSQL database

    - title: Provide information about the new component
      required:
        - cluster_id
        - namespace
        - application_id
        - owner
      properties:
        cluster_id:
          title: Cluster Id
          type: string
          default: "<XXX_XXX_XXX>"
        namespace:
          title: Namespace
          type: string
        application_id: 
          title: Application Id
          type: string
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: [User]

    - title: Provide Build Information
      required:
        - image_host
        - image_tag
      properties:
        image_host:
          title: Image Host
          type: string
          default: ghcr.io
        image_tag:
          title: Image Tag
          type: string
          default: latest

  steps:
    - id: templateSource
      name: Generating the source code component
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: ./source
        values:
          git_host: github.com
          githubOrg: ${{parameters.githubOrg}}
          repoName: ${{parameters.namespace}}-${{parameters.application_id}}
          owner: ${{parameters.owner}}
          cluster_id: ${{parameters.cluster_id}}
          namespace: ${{parameters.namespace}}
          component_id: ${{parameters.namespace}}-${{parameters.application_id}}
          description: ${{parameters.description}}

    - id: publishSource
      name: Publishing to Source Code Repository
      action: publish:github
      input:
        sourcePath: ./source
        description: ${{parameters.description}}
        repoUrl: github.com?owner=${{parameters.githubOrg}}&repo=${{parameters.namespace}}-${{parameters.application_id}}
        defaultBranch: main
        protectDefaultBranch: false
        repoVisibility: public

    - id: templateGitops
      name: Generating the deployment resources and artefacts
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          git_host: github.com
          component_id: ${{parameters.namespace}}-${{parameters.application_id}}
          description: ${{parameters.description}}
          destination: https://github.com/${{parameters.githubOrg}}/${{parameters.namespace}}-${{parameters.application_id}}-gitops.git
          source_repository: https://github.com/${{parameters.githubOrg}}/${{parameters.namespace}}-${{parameters.application_id}}.git
          repository_name: ${{parameters.namespace}}-${{parameters.application_id}}
          git_owner: ${{parameters.githubOrg}}
          cluster: ${{parameters.cluster_id}}
          namespace: ${{parameters.namespace}}
          image_host: ${{parameters.image_host}}
          image_name: ${{parameters.namespace}}/${{parameters.application_id}}
          image_tag: ${{parameters.image_tag}}
          application_id: ${{parameters.application_id}}
        targetPath: ./tenant-gitops

    - id: publishGitops
      name: Publishing to Deployment Resource Repository
      action: publish:github
      input:
        repoUrl: github.com?owner=${{parameters.githubOrg}}&repo=${{parameters.namespace}}-${{parameters.application_id}}-gitops
        title: GitOps resources for ${{parameters.namespace}}-${{parameters.application_id}}
        description: GitOps resources for ${{parameters.namespace}}-${{parameters.application_id}}
        sourcePath: ./tenant-gitops
        defaultBranch: main
        protectDefaultBranch: false
        repoVisibility: public

    - id: registerSource
      name: Register NestJS Service Component
      action: catalog:register
      input:
        repoContentsUrl: ${{steps.publishSource.output.repoContentsUrl}}
        catalogInfoPath: /catalog-info.yaml

    - id: createArgoResources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{parameters.namespace}}-${{parameters.application_id}}-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://github.com/${{parameters.githubOrg}}/${{parameters.namespace}}-${{parameters.application_id}}-gitops.git
        path: 'argocd/'

  output:
    links:
      - title: Source Code Repository
        url: ${{steps.publishSource.output.remoteUrl}}
      - title: Pipeline status
        url: https://github.com/${{parameters.githubOrg}}/${{parameters.namespace}}-${{parameters.application_id}}/actions
      - title: Open NestJS Service Component
        icon: catalog
        entityRef: ${{steps.registerSource.output.entityRef}}
